# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ["master"]

jobs:
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [20.12.2]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v4
      - name: Create .env
        run: |
          touch .env
          echo NEXTAUTH_URL=${{secrets.NEXTAUTH_URL}} >> .env
          echo NEXTAUTH_SECRET=${{secrets.NEXTAUTH_SECRET}} >> .env
          echo APIBASE_URL=${{secrets.APIBASE_URL}} >> .env
          echo FIREBASE_API=${{secrets.FIREBASE_API}} >> .env
          echo FIREBASE_APPID=${{secrets.FIREBASE_APPID}} >> .env
          echo FIREBASE_SENDERID=${{secrets.FIREBASE_SENDERID}} >> .env
          echo FIREBASE_AUTHDOMAIN=${{secrets.FIREBASE_AUTHDOMAIN}} >> .env
          echo FIREBASE_PROJID=${{secrets.FIREBASE_PROJID}} >> .env
          echo FIREBASE_BUCKET=${{secrets.FIREBASE_BUCKET}} >> .env
          echo POST_PER_PAGE=${{secrets.POST_PER_PAGE}} >> .env
          echo DATABASE_URL=${{secrets.DATABASE_URL}} >> .env
          echo ID_GITHUB=${{secrets.ID_GITHUB}} >> .env
          echo SECRET_GITHUB=${{secrets.SECRET_GITHUB}} >> .env
          echo GOOGLE_ID=${{secrets.GOOGLE_ID}} >> .env
          echo GOOGLE_SECRET=${{secrets.GOOGLE_SECRET}} >> .env
          cat .env
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npx prisma generate
      - run: npm run build
      - name: change directory
        run: cd /home/hanxin/actions-runner/_work/chez-hanxin/chez-hanxin
      - run: pm2 restart 1
